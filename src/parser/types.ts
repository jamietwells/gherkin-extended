export type TitleType = { title: string, type: string };
export type Taggable = { tags: TagType[]; };
export type DescriptionType = { description: string[] };
export type FeatureBlockType = { type: "Feature"; scenarios: ScenarioBlockType[] } & TitleType & Taggable & DescriptionType;
export type StepLineTableBlockOrDocStringType = ({ type: "Step"; word: string; text: (ParameterType | RegularTextType)[] }) | TableType | DocStringType;
export type ExampleBlockType = { type: "Example"; steps: StepLineTableBlockOrDocStringType[] } & TitleType & Taggable;
export type ScenarioBlockType = { type: "Scenario"; steps: StepLineTableBlockOrDocStringType[] } & TitleType & Taggable;
export type ExamplesBlockType = { table: TableType } & ExamplesType;
export type Comment = { type: "Comment"; comment: string; };
export type BlankLine = { type: "BlankLine"; };
export type TagType = { type: "Tag"; value: string };
export type TableType = { type: "Table"; rows: { type: "TableRow"; cells: string[] }[] };
export type ScenarioOutlineBlockType = { type: "ScenarioOutline"; steps: (StepLineTableBlockOrDocStringType | BlankLine | Comment)[]; examples: (ExampleBlockType | BlankLine | Comment)[] } & TitleType & Taggable;
export type ScenarioOutlineTitleType = { type: "ScenarioOutline"; } & TitleType;
export type BackgroundTitleType = { type: "Background"; } & TitleType;
export type ScenarioTitleType = { type: "Scenario"; } & TitleType;
export type FeatureTitleType = { type: "Feature"; } & TitleType;
export type RuleTitleType = { type: "Rule"; } & TitleType;
export type ExampleTitleType = { type: "Example"; } & TitleType;
export type ExamplesType = { type: "Examples" };
export type BackgroundBlockType = { type: "Background"; steps: StepLineTableBlockOrDocStringType[] } & TitleType;
export type RuleBlockType = { type: "Rule"; examples: (ExampleBlockType | BlankLine | Comment)[] } & TitleType & Taggable;
export type ParameterType = { type: 'Parameter'; name: string; };
export type RegularTextType = { type: 'Regular Text'; text: string; };
export type SingleTableRowType = { type: "TableRow"; cells: string[] };
export type DocStringType = { type: 'DocString', content: string };

export type GherkinType = {
  NoNewLineContent: string
  Parameter: ParameterType;
  RegularText: RegularTextType;
  ParameterizedLine: (ParameterType | RegularTextType)[];
  SingleTableRow: SingleTableRowType;
  HorizontalWhitespaceCharacter: string
  Comment: Comment;
  BlankLine: BlankLine;
  BlankLinesOrComments: BlankLine | Comment;
  AnyKeyword: string;
  DescriptionParser: DescriptionType;
  Tag: TagType;
  Tags: TagType[];
  TagsOptional: TagType[];
  CellContent: string;
  EmptyCell: string;
  FilledCell: string;
  TableLine: string[];
  Table: TableType;
  StepLineTableBlockOrDocString: StepLineTableBlockOrDocStringType;
  ScenarioOutlineTitle: ScenarioOutlineTitleType;
  BackgroundTitle: BackgroundTitleType;
  ScenarioTitle: ScenarioTitleType;
  FeatureTitle: FeatureTitleType;
  RuleTitle: RuleTitleType;
  ExampleTitle: ExampleTitleType;
  ExamplesTitle: ExamplesType;
  BackgroundBlock: BackgroundBlockType;
  RuleBlock: RuleBlockType;
  ExamplesBlock: ExamplesBlockType;
  ExampleBlock: ExampleBlockType;
  ScenarioOutlineBlock: ScenarioOutlineBlockType;
  FeatureBlock: FeatureBlockType;
  ScenarioBlock: ScenarioBlockType;
  GherkinFile: (FeatureBlockType | ScenarioBlockType | Comment | BlankLine)[];
  ConsumeSameIndent: string;
  IndentSame: number;
  IndentMoreLookahead: number;
  NewLine: null;
  EndOfLineOrFile: null;
  DocString: DocStringType;
};